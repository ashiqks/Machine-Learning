# -*- coding: utf-8 -*-
"""KMeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BBluqFhp8BZR36VojcU-uuKDuQNV0wIL
"""

#impot necessary modules
import numpy as np
from sklearn.cluster import KMeans # import the KMeans clustering model from sklearn
from sklearn.preprocessing import MinMaxScaler # import the MinMaxScaler class for feature scaling
import pandas as pd 
import matplotlib.pyplot as plt

X = pd.read_csv('cars.csv') # read the csv file
X = X.iloc[:, :-1] # extract all the values except the last column
X = X.apply(pd.to_numeric, errors='coerce', axis=1) # convert all the values to a number values, except the null strings to NaN values
X = X.dropna().values # drop the rows NaN values 
min_max = MinMaxScaler() # create an object of MinMaxScaler class
X = min_max.fit_transform(X) # apply the feature processing

wcss = []
for i in range(1, 11): # try out various values to obtain the optimum cluster
  kmeans = KMeans(n_clusters=i, init='k-means++', random_state=0) # create the KMeans cluster model
  kmeans.fit(X) # fit the model to the dataset
  wcss.append(kmeans.inertia_) # sum of squared distances of samples to their closest cluster center
  
plt.plot(range(1,11), wcss)
plt.show()

kmeans = KMeans(n_clusters=4, init='k-means++') # find the clusters using KMeans
y = kmeans.fit_predict(X) # group each data on the dataset to a group
print(y)

