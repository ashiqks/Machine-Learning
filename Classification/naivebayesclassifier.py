# -*- coding: utf-8 -*-
"""NaiveBayesClassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jE7p_mbXSf-NjxgxQRGgbXBKsW039doa
"""

# import necessary modules
from sklearn.datasets import load_wine # import the wine dataset from sklearn
import numpy as np
from sklearn.preprocessing import MinMaxScaler # import the MinMaxScaler class for feature scaling
from sklearn.model_selection import train_test_split #import the function to partition the dataset to train and test sets
from sklearn.naive_bayes import GaussianNB # load the GaussianNB naive bayes classifier from sklearn

dataset = load_wine() # load the dataset
x = dataset.data # get the independent variables
y = dataset.target # get the target classes column
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2) # splitting the dataset using the train_test_split where the test data contains 20% of the original dataset
scale = MinMaxScaler() # create an object of MinMaxScaler class with default range of (0, 1)
x_train = scale.fit_transform(x_train) # fit and transform the training independent variable to the MinMaxScaler object
x_test = scale.transform(x_test) # transform the training dependent variable to the MinMaxScaler object

classification = GaussianNB() # create naives bayes classifier 
classification.fit(x_train, y_train) # fit the model with traing set
Accuracy= classification.score(x_test, y_test) # find the mean accuracy using the score method
print(Accuracy)

y_pred = classification.predict(x_test) # find the prediction from the best estimator model using the predict method
print(confusion_matrix(y_pred, y_test))